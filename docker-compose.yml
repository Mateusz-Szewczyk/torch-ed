volumes:
  db_data:
  backend_data:

services:
  frontend:
    build: ./frontend
    ports:
      - '3000:3000'
    volumes:
      - ./frontend:/app
    depends_on:
      - backend
      - rag
    environment:
      - REACT_APP_DJANGO_API_URL: http://backend:8000
      - REACT_APP_RAG_API_URL: http://rag:8042
    networks:
      - app-network

  backend:
    build: ./backend
    ports:
      - '8000:8000'
    volumes:
      - ./backend:/app
    depends_on:
      - backend_db
    environment:
      - USER_DB: ${USER_DB}
      - PASSWORD_DB: ${PASSWORD_DB}
      - POSTGRES_DB: ${POSTGRES_DB}
      - SECRET_KEY: ${SECRET_KEY}
      - SERVER: ${SERVER}
      - PORT: ${PORT}
      - SALT: ${SALT}
      - PUP_PATH: ${PUP_PATH}
      - PRP_PATH: ${PRP_PATH}
      - MESSAGE: ${MESSAGE}
      - SIGNATURE: ${SIGNATURE}
      - EMAIL: ${EMAIL}
      - EMAIL_PASSWORD: ${EMAIL_PASSWORD}
    env_file:
      - .env
    networks:
      - app-network

  rag:
    build: ./rag
    ports:
      - '8042:8042'       # FastAPI Port
    volumes:
      - ./rag:/app
    environment:
      - NEO4J_URI: bolt://neo4j:7687
      - NEO4J_USERNAME: neo4j
      - NEO4J_PASSWORD: password
      - PERSIST_DIRECTORY: /app/vector_store_data
      - EMBEDDING_MODEL_NAME: all-MiniLM-L6-v2
      - ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      - TAVILY_API_KEY: ${TAVILY_API_KEY}
    networks:
      - app-network

  db:
    image: postgres:15
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER: ${POSTGRES_USER}
      - POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      - POSTGRES_DB: ${POSTGRES_DB}
    env_file:
      - .env
    networks:
      - app-network

  backend_db:
    image: postgres:17.2
    container_name: backend_db
    restart: always
    environment:
      - POSTGRES_USER: ${USER_DB}
      - POSTGRES_PASSWORD: ${PASSWORD_DB}
      - POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - backend_data:/var/lib/postgresql/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
